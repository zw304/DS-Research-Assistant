{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red204\green0\blue78;\red255\green255\blue254;\red0\green0\blue0;
\red39\green78\blue204;\red21\green129\blue62;\red42\green55\blue62;\red107\green0\blue1;\red238\green57\blue24;
}
{\*\expandedcolortbl;;\cssrgb\c84706\c10588\c37647;\cssrgb\c100000\c100000\c99608;\cssrgb\c0\c0\c0;
\cssrgb\c20000\c40392\c83922;\cssrgb\c5098\c56471\c30980;\cssrgb\c21569\c27843\c30980;\cssrgb\c50196\c0\c0;\cssrgb\c95686\c31765\c11765;
}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl360\partightenfactor0

\f0\fs24 \cf2 \cb3 \expnd0\expndtw0\kerning0
## ---------------------------- ## Mar 1st / 2022  --------------\cf4 \cb1 \
\cf2 \cb3 ## Since update of hastags per tweet & mentions per tweet:\cf4 \cb1 \
\cf2 \cb3 ## 1. create a new table: we can then discover that: \cf4 \cb1 \
\
\cf2 \cb3 #create table if not exists `tweet-research-shared.user_zw304.tweet-mention-tag` \cf4 \cb1 \
\cf2 \cb3 #as( \cf4 \cb1 \
\cf2 \cb3 #select distinct t.user_id,MAX(user.avg_fact_score), count(mentions.mention) AS mention, count(tags.tag)\cf4 \cb1 \
\cf2 \cb3 #from `tweet-research-shared.impeachment_2020.tweets_v2` t \cf4 \cb1 \
\cf2 \cb3 #left join `tweet-research-shared.impeachment_2020.status_mentions_v2_flat` mentions on t.user_id = mentions.user_id \cf4 \cb1 \
\cf2 \cb3 #left join `tweet-research-shared.impeachment_2020.status_tags_v2_flat` tags on mentions.user_id = tags.user_id\cf4 \cb1 \
\cf2 \cb3 #left join `tweet-research-shared.impeachment_2020.user_details_v20210806_slim` user on tags.user_id = user.user_id\cf4 \cb1 \
\cf2 \cb3 #group by t.user_id\cf4 \cb1 \
\cf2 \cb3 #order by mention \cf4 \cb1 \
\cf2 \cb3 #limit 10;          ## this takes too long time to run, have another try as the following: \cf4 \cb1 \
\
\cf2 \cb3 ## another try for tweet: \cf4 \cb1 \
\cf5 \cb3 create\cf4  \cf5 table\cf4  \cf5 if\cf4  \cf5 not\cf4  \cf5 exists\cf4  \cf6 `tweet-research-shared.user_zw304.tweet-mention-tag`\cf4  \cb1 \
\cf5 \cb3 as\cf7 (\cf4 \cb1 \
\cf5 \cb3 select\cf4  \cf5 distinct\cf4  t.user_id, mention, max_fact_score, num_tags\cb1 \
\cf5 \cb3 from\cf4  \cf6 `tweet-research-shared.impeachment_2020.tweets_v2`\cf4  t\cb1 \
\cf5 \cb3 left\cf4  \cf5 join\cf4  \cf7 (\cf4 \cb1 \
\cb3     \cf5 select\cf4  user_id, \cf5 count\cf7 (\cf4 mention\cf7 )\cf4  \cf5 as\cf4  mention\cb1 \
\cb3     \cf5 from\cf4  \cf6 `tweet-research-shared.impeachment_2020.status_mentions_v2_flat`\cf4  \cb1 \
\cb3     \cf5 group\cf4  \cf5 by\cf4  user_id\cb1 \
\cb3     \cf5 order\cf4  \cf5 by\cf4  mention \cf5 DESC\cf4 \cb1 \
\cf7 \cb3 )\cf4  mentions\cb1 \
\cf5 \cb3 on\cf4  t.\cf8 user_id\cf4  = mentions.user_id\cb1 \
\cf5 \cb3 left\cf4  \cf5 join\cf4  \cf7 (\cf4 \cb1 \
\cb3     \cf5 select\cf4  user_id, \cf5 max\cf7 (\cf4 avg_fact_score\cf7 )\cf4  \cf5 as\cf4  max_fact_score\cb1 \
\cb3     \cf5 from\cf4  \cf6 `tweet-research-shared.impeachment_2020.user_details_v20210806_slim`\cf4 \cb1 \
\cb3     \cf5 group\cf4  \cf5 by\cf4  user_id\cb1 \
\cf7 \cb3 )\cf4  user\cb1 \
\cf5 \cb3 on\cf4  t.\cf8 user_id\cf4  = user.user_id\cb1 \
\cf5 \cb3 left\cf4  \cf5 join\cf4  \cf7 (\cf4 \cb1 \
\cb3     \cf5 select\cf4  user_id, \cf5 count\cf7 (\cf4 tag\cf7 )\cf4  \cf5 as\cf4  num_tags\cb1 \
\cb3     \cf5 from\cf4  \cf6 `tweet-research-shared.impeachment_2020.status_tags_v2_flat`\cf4 \cb1 \
\cb3     \cf5 group\cf4  \cf5 by\cf4  user_id\cb1 \
\cf7 \cb3 )\cf4  tags\cb1 \
\cf5 \cb3 on\cf4  t.\cf8 user_id\cf4  = tags.user_id\cb1 \
\cf5 \cb3 order\cf4  \cf5 by\cf4  mention \cf5 DESC\cf7 )\cf4 ;\cb1 \
\
\cf2 \cb3 ### seems that when tweeting: people who love to mention also have a high numebr of tags included with not very high fact score \cf4 \cb1 \
\cf2 \cb3 ## set 'order by max_fact_score DESC' to see the relative changing: \cf4 \cb1 \
\cf5 \cb3 select\cf4  \cf7 *\cf4  \cb1 \
\cf5 \cb3 from\cf4  \cf6 `tweet-research-shared.user_zw304.tweet-mention-tag`\cf4  t\cb1 \
\cf5 \cb3 order\cf4  \cf5 by\cf4  max_fact_score \cf5 DESC\cf4 \cb1 \
\cf5 \cb3 limit\cf4  \cf9 100\cf4 ; \cb1 \
\cf2 \cb3 ## seems that a high fact score often relate to mention number around 1000. \cf4 \cb1 \
\
\cf2 \cb3 ## then, set 'max_fact_score ASC' to see the relative changing number of mention & tags: \cf4 \cb1 \
\cf5 \cb3 select\cf4  \cf7 *\cf4  \cb1 \
\cf5 \cb3 from\cf4  \cf6 `tweet-research-shared.user_zw304.tweet-mention-tag`\cf4  t\cb1 \
\cf5 \cb3 order\cf4  \cf5 by\cf4  max_fact_score \cf5 ASC\cf4 \cb1 \
\cf5 \cb3 limit\cf4  \cf9 100\cf4 ;  \cb1 \
\
\cf2 \cb3 ## conclusion: seems that for tweet, the a high vlomune of mention and num_tag does not mean an overall high fact score\cf4 \cb1 \
\cf2 \cb3 ## INSTEAD OF this, a high fact score seems have a specifc range of mention# (1000) and tag# (100~300)\cf4 \cb1 \
\
\
\cf2 \cb3 #### for retweet: \cf4 \cb1 \
\cf5 \cb3 create\cf4  \cf5 table\cf4  \cf5 if\cf4  \cf5 not\cf4  \cf5 exists\cf4  \cf6 `tweet-research-shared.user_zw304.retweet-mention-tag`\cf4  \cb1 \
\cf5 \cb3 as\cf7 (\cf4 \cb1 \
\cf5 \cb3 select\cf4  \cf5 distinct\cf4  t.user_id, mention, max_fact_score, num_tags\cb1 \
\cf5 \cb3 from\cf4  \cf6 `tweet-research-shared.impeachment_2020.retweets_v2`\cf4  t\cb1 \
\cf5 \cb3 left\cf4  \cf5 join\cf4  \cf7 (\cf4 \cb1 \
\cb3     \cf5 select\cf4  user_id, \cf5 count\cf7 (\cf4 mention\cf7 )\cf4  \cf5 as\cf4  mention\cb1 \
\cb3     \cf5 from\cf4  \cf6 `tweet-research-shared.impeachment_2020.status_mentions_v2_flat`\cf4  \cb1 \
\cb3     \cf5 group\cf4  \cf5 by\cf4  user_id\cb1 \
\cb3     \cf5 order\cf4  \cf5 by\cf4  mention \cf5 DESC\cf4 \cb1 \
\cf7 \cb3 )\cf4  mentions\cb1 \
\cf5 \cb3 on\cf4  t.\cf8 user_id\cf4  = mentions.user_id\cb1 \
\cf5 \cb3 left\cf4  \cf5 join\cf4  \cf7 (\cf4 \cb1 \
\cb3     \cf5 select\cf4  user_id, \cf5 max\cf7 (\cf4 avg_fact_score\cf7 )\cf4  \cf5 as\cf4  max_fact_score\cb1 \
\cb3     \cf5 from\cf4  \cf6 `tweet-research-shared.impeachment_2020.user_details_v20210806_slim`\cf4 \cb1 \
\cb3     \cf5 group\cf4  \cf5 by\cf4  user_id\cb1 \
\cf7 \cb3 )\cf4  user\cb1 \
\cf5 \cb3 on\cf4  t.\cf8 user_id\cf4  = user.user_id\cb1 \
\cf5 \cb3 left\cf4  \cf5 join\cf4  \cf7 (\cf4 \cb1 \
\cb3     \cf5 select\cf4  user_id, \cf5 count\cf7 (\cf4 tag\cf7 )\cf4  \cf5 as\cf4  num_tags\cb1 \
\cb3     \cf5 from\cf4  \cf6 `tweet-research-shared.impeachment_2020.status_tags_v2_flat`\cf4 \cb1 \
\cb3     \cf5 group\cf4  \cf5 by\cf4  user_id\cb1 \
\cf7 \cb3 )\cf4  tags\cb1 \
\cf5 \cb3 on\cf4  t.\cf8 user_id\cf4  = tags.user_id\cb1 \
\cf5 \cb3 order\cf4  \cf5 by\cf4  mention \cf5 DESC\cf7 )\cf4 ; \cb1 \
\
\cf2 \cb3 ### compare to tweet, set retweet table as 'order by max_fact_score ASC'\cf4 \cb1 \
\cf5 \cb3 select\cf4  \cf7 *\cf4  \cf5 from\cf4  \cf6 `tweet-research-shared.user_zw304.retweet-mention-tag`\cf4 \cb1 \
\cf5 \cb3 order\cf4  \cf5 by\cf4  max_fact_score \cf5 ASC\cf4 \cb1 \
\cf5 \cb3 limit\cf4  \cf9 100\cf4 ;   \cf2 ## the numbers of mention anf tags are much smaller than tweet, but still very high, num_tags are unstable \cf4 \cb1 \
\
\cf2 \cb3 ### compare to tweet, set retweet table as 'order by max_fact_score DESC'\cf4 \cb1 \
\cf5 \cb3 select\cf4  \cf7 *\cf4  \cf5 from\cf4  \cf6 `tweet-research-shared.user_zw304.retweet-mention-tag`\cf4 \cb1 \
\cf5 \cb3 order\cf4  \cf5 by\cf4  max_fact_score \cf5 DESC\cf4 \cb1 \
\cf5 \cb3 limit\cf4  \cf9 100\cf4 ; \cb1 \
\cf2 \cb3 ## GET THE RANGE of a high fact score: mention below 1000 mostly around 800, num_tags required(is not null)\cf4 \cb1 \
\
\
\cf2 \cb3 ## --> using left join tweet table there are many null tags, & for one post, there are multiple mentions\cf4 \cb1 \
\cf2 \cb3 ## --> people prefer to mention instead of using tags\cf4 \cb1 \
\cf2 \cb3 ## --> save this table for future usage, mention -->  spread --> what is the fact socre?\cf4 \cb1 \
\
\cf2 \cb3 ### to follow up last week's research about domians & tweet\cf4 \cb1 \
\cf2 \cb3 ### try the following query: \cf4 \cb1 \
\
\cf5 \cb3 create\cf4  \cf5 table\cf4  \cf5 if\cf4  \cf5 not\cf4  \cf5 exists\cf4  \cf6 `tweet-research-shared.user_zw304.tweet-tag-q`\cf4  \cb1 \
\cf5 \cb3 as\cf7 (\cf4 \cb1 \
\cf5 \cb3 select\cf4  profile.\cf7 *\cf4  , t.num_tags,q.is_q \cf5 from\cf4  \cf6 `tweet-research-shared.impeachment_2020.profile_tags_v2_flat`\cf4  profile \cb1 \
\cf5 \cb3 left\cf4  \cf5 join\cf4  \cf6 `tweet-research-shared.user_zw304.tweet-mention-tag`\cf4  t\cb1 \
\cf5 \cb3 on\cf4  profile.\cf8 user_id\cf4  = t.user_id \cb1 \
\cf5 \cb3 left\cf4  \cf5 join\cf4  \cf6 `tweet-research-shared.impeachment_2020.user_details_v20210806_slim`\cf4 q\cb1 \
\cf5 \cb3 on\cf4  t.\cf8 user_id\cf4  = q.user_id\cb1 \
\cf5 \cb3 order\cf4  \cf5 by\cf4  t.num_tags \cf5 DESC\cf7 )\cf4 \cb1 \
\
\cf2 \cb3 ## lots of information from this table(tweet related): order by the number of tags\cf4 \cb1 \
\cf2 \cb3 ## we can see the most frequent tags and the related q status\cf4 \cb1 \
\cf2 \cb3 ## seems that the non-q would have more tags than is_q\cf4 \cb1 \
\
\
\
}